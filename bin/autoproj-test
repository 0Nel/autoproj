#! /usr/bin/env ruby

require 'autoproj'
require 'autoproj/cmdline'

user_selection = Autoproj.silent do
    Autoproj::CmdLine.initialize_root_directory
    Autoproj::CmdLine.initialize_and_load(ARGV)
end

user_selection = user_selection.map do |arg|
    if File.directory?(arg)
        File.expand_path(arg)
    else arg
    end
end

Autobuild.pass_test_errors = true
Autobuild.ignore_errors = true

Autoproj::CmdLine.report do
    resolved_selection = Autoproj::CmdLine.
        resolve_user_selection(user_selection, :filter => false)
    # Remove non-existing packages
    Autoproj.manifest.each_autobuild_package do |pkg|
        if !File.directory?(pkg.srcdir)
            Autoproj.manifest.add_exclusion(pkg, "#{pkg.name} is not checked out")
        end
    end
    resolved_selection.filter_excluded_and_ignored_packages(Autoproj.manifest)
    # This calls #prepare, which is required to run build_packages
    packages = Autoproj::CmdLine.import_packages(resolved_selection)
    packages.each { |pkg| Autobuild::Package[pkg].disable_phases('import', 'prepare', 'install') }
    Autoproj::CmdLine.build_packages(resolved_selection, packages, ['test'])
end

